{"meta":{"title":"Blog 1","subtitle":null,"description":null,"author":"Citrus","url":"http://hicitrus.com/blog"},"pages":[],"posts":[{"title":"搭建git仓库","slug":"create-git-repo","date":"2018-03-19T16:00:00.000Z","updated":"2020-08-05T02:11:52.151Z","comments":true,"path":"create-git-repo/","link":"","permalink":"http://hicitrus.com/blog/create-git-repo/","excerpt":"","text":"搭建git仓库创建用户创建一个git和用户，用来运行git服务： adduser git 创建证书登录收集所有需要登录的用户的公钥，就是他们自己的id_rsa.pub文件，把所有公钥导入到/home/git/.ssh/authorized_keys文件里，一行一个。 检查权限 chmod 755 .ssh chmod 644 .ssh/authorized_keys 初始化Git仓库先选定一个目录作为Git仓库，假定是/gitrep/test.git​ cd / chown -R git:git gitrep 进入gitrep目录 git init --bare test.git 创建多个仓库只要在gitrep目录运行 git init --bare xxx.git 修改仓库名 克隆仓库修改端口之后与默认使用方法有与不同 git clone ssh://git@ip:port/gitrep/test.git 初始已有仓库克隆为新仓库git clone remote_repo new_repo.git","categories":[],"tags":[{"name":"git","slug":"git","permalink":"http://hicitrus.com/blog/tags/git/"}]},{"title":"全景学习","slug":"learn-threejs","date":"2017-11-19T16:00:00.000Z","updated":"2020-08-05T02:11:52.151Z","comments":true,"path":"learn-threejs/","link":"","permalink":"http://hicitrus.com/blog/learn-threejs/","excerpt":"","text":"学习 three.jsthree.js 学习全景基本概念 插件 Photo Sphere Viewer ：这个插件基于 three.js 可以直接生成一个全景的预览，处理好重力感应，API 调用简单。但是也有一些问题，经常画面跳动。 Photo-Sphere-Viewer：这个插件又是基于上一个做了完善和修改，主要有： 标记 marker 标记事件 全局点击位置标点 修复了画面跳动 依赖： three.js doT.js uEvent.js D.js DeviceOrientationControls.js 重力感应 [应用示例](https://github.com/Citrusu/learn/blob/master/threejs/test1.html)","categories":[],"tags":[{"name":"全景","slug":"全景","permalink":"http://hicitrus.com/blog/tags/全景/"},{"name":"three.js","slug":"three-js","permalink":"http://hicitrus.com/blog/tags/three-js/"}]},{"title":"Web 地图 GPS 定位","slug":"map","date":"2017-09-07T16:00:00.000Z","updated":"2020-08-05T02:11:52.151Z","comments":true,"path":"map/","link":"","permalink":"http://hicitrus.com/blog/map/","excerpt":"","text":"背景在地图上某城市添加多个宝藏，然后根据用户 GPS 信息获取当前位置在地图在寻找宝藏。当用户位置到达宝藏位置就打开宝藏。 目标/技术点 在 web 页面中实现定位 当用户移动位置刷新当前位置 根据 经纬度计算地球上两点距离 通过百度地图 API 显示地图 通过百度地图 API 定时刷新（有问题） 问题及过程百度定位在使用百度地图的 geolocation.getCurrentPosition 接口发现移动位置并没有更新当前位置。查找资料说要设置 maximumAge, 实际上把这个值设置 0 也没啥用，照样不更新位置。 12345678910111213geolocation.getCurrentPosition(function (r) &#123; if (this.getStatus() == BMAP_STATUS_SUCCESS) &#123; var lng = r.point.lng; var lat = r.point.lat; console.log('您的位置baidu：' + lng + ',' + lat + ',时间：' + new Date().getMinutes() + ':' + new Date().getSeconds()); &#125;else &#123; console.log('failed' + this.getStatus()); &#125;&#125;, &#123; enableHighAccuracy: true, maximumAge: 0&#125;); 经过多次测试猜测百度地图缓存了当前位置，大概需要10分钟才会更新新的位置。放弃之，下一个。 使用原生接口使用原生接口navigator.geolocation.getCurrentPosition 1234567891011121314if (navigator.geolocation) &#123; navigator.geolocation.getCurrentPosition(function(p)&#123; //成功获取位置 var position = &#123; lng: p.coords.longitude, lat: p.coords.latitude &#125;; console.log(position); &#125;, function(err)&#123; console.log(err); &#125;);&#125;else &#123; console.log( \"Geolocation is not supported by this browser.\");&#125; 几乎快要搞定了，通过定时调用当前位置再转换成百度的位置显示标记到地图上，完美！✌️BUT ! 安卓一切 OK，IOS 从10开始需要 https协议才能使用 geolocation。否则报 [blocked] Access to geolocation was blocked over insecure connection to [http://www.mydomain.cn](http://www.mydomain.cn/) 错 WTF🤷‍♂️。 这时候，你可以选择 把网站切换成 https ，下面就不用看啦。 使用 iframe 。如果你暂时不能换成 https那可以试试以下方法 使用 iframe我的思路是使用 iframe加载一个https的页面，然后这个 iframe使用 geolocation返回位置信息。说起干就干。在这里很容易碰到另一个问题，没错，我就碰到了。😂 我是借助 coding.net的 Pages服务创建了一个页面，为嘛不用github呢，很简单，coding可以很方便一键切换成https协议，而且在天朝速度 sousou 的。由于用了三方页面加载 iframe就难免碰到跨域问题。这里推荐 Iframe跨域通信的几种方式 最后使用 postMessage解决跨域问题。🤣 接口详情参考 postMessage 。 12345678910111213141516// frameif (navigator.geolocation) &#123; navigator.geolocation.getCurrentPosition(function(p)&#123; //成功获取位置 var position = &#123; lng: p.coords.longitude, lat: p.coords.latitude &#125;; console.log(position); parent.postMessage(position, '*'); &#125;, function(err)&#123; console.log('GPSerr'+err) &#125;);&#125;else &#123; alert( \"OMG ! 您的设备不支持 GPS\");&#125; 123456789// parent&lt;iframe id=\"gpsIframe\" src=\"yourwebsite\" style=\"display: none\"&gt;&lt;/iframe&gt;&lt;script&gt; window.addEventListener('message', function(evt)&#123; if (event.origin !== \"yourwebsit\") return; console.log(evt.data); &#125;);&lt;/script&gt; 所有源码已放 github 点我","categories":[],"tags":[{"name":"Map","slug":"Map","permalink":"http://hicitrus.com/blog/tags/Map/"},{"name":"百度地图","slug":"百度地图","permalink":"http://hicitrus.com/blog/tags/百度地图/"},{"name":"getCurrentPosition","slug":"getCurrentPosition","permalink":"http://hicitrus.com/blog/tags/getCurrentPosition/"}]},{"title":"使用 expect","slug":"use-expect","date":"2017-08-21T16:00:00.000Z","updated":"2020-08-05T02:11:52.152Z","comments":true,"path":"use-expect/","link":"","permalink":"http://hicitrus.com/blog/use-expect/","excerpt":"","text":"安装expect expect 可以完成一些自动化的任务，举个粟子：进入 a 服务器更新代码，退出再进入 b 服务器更新代码…… 检查是否已经安装 expectwhereis expect 安装tcl下载地址：http://nchc.dl.sourceforge.net/sourceforge/tcl/tcl8.4.11-src.tar.gz tar -zxvf tcl8.4.11-src.tar.gz cd tcl8.4.11/unix/ ./configure make &amp;&amp; make install 安装expect下载地址：http://sourceforge.net/projects/expect/files/Expect/5.45/expect5.45.tar.gz/download tar -zxvf expect5.45.tar.gz cd expect5.45 ./configure make &amp;&amp; make install 安装参考 http://blog.csdn.net/silenceray/article/details/54582345 http://www.cnblogs.com/daojian/archive/2012/10/10/2718390.html 使用expect 示例#!/usr/bin/expect # 上面的路径为 whereis expect 的路径 set host 192.168.0.1 set password abcd123 set username root set port 22 set script &quot;ls&quot; set timeout -1 spawn ssh -p $port $username@$host expect { &quot;(yes/no)?&quot; {send &quot;yes\\r&quot;;exp_continue} &quot;password:&quot; {send &quot;$password\\r&quot;;exp_continue} &quot;#*&quot; {send &quot;$script &amp;&amp; exit\\r&quot;} } interact","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://hicitrus.com/blog/tags/linux/"},{"name":"expect","slug":"expect","permalink":"http://hicitrus.com/blog/tags/expect/"}]},{"title":"为什么微信二维码不能识别？","slug":"recognition-QRcode","date":"2017-01-15T16:00:00.000Z","updated":"2020-08-05T02:11:52.152Z","comments":true,"path":"recognition-QRcode/","link":"","permalink":"http://hicitrus.com/blog/recognition-QRcode/","excerpt":"","text":"原因分析： 尺寸太小 清晰度不够 测试过程 尺寸：100-20px 123456789101112131415161718192021//图片大小测试var src = 'img/';var img = 'act_happy_code';var type = ['jpg','png','gif'];var size = [100,90,80,70,60,50,40,30,20];var box = document.querySelectorAll('body')[0];for(var i = 0,sizeLen = size.length; i &lt; sizeLen; i++)&#123; for(var j = 0,typeLen = type.length; j &lt; typeLen; j++)&#123; var imgBox = document.createElement('div'); var ctext = document.createTextNode(type[j]+ '_' + size[i] + 'x' + size[i] + 'px'); var cimg = document.createElement('img'); cimg.style.width = size[i] + 'px'; cimg.style.height = size[i] + 'px'; cimg.setAttribute('src', src + img + '.'+ type[j] ); imgBox.appendChild(ctext); imgBox.appendChild(cimg); box.appendChild(imgBox); &#125;&#125; 清晰度：100%-5% 在清晰度测试上我使用了七牛的压缩接口 12345678910111213141516171819202122//图片质量测试var src = '';var mode = '?imageView2/2';var img = 'http://ob9fno759.bkt.clouddn.com/act_happy_code';var type = ['jpg','png','gif'];var quality = [100,75,50,25,10,5];var size = [80,60,40,30,20];var box = document.querySelectorAll('body')[0];for(var i = 0,sizeLen = size.length; i &lt; sizeLen; i++)&#123; for(var j = 0,qLen = quality.length; j &lt; qLen; j++)&#123; var randNum = Math.ceil(Math.random()*1000); var imgBox = document.createElement('div'); var ctext = document.createTextNode('质量:'+ quality[j] +'%' + '_' + size[i] + 'x' + size[i] + 'px'); var cimg = document.createElement('img'); cimg.setAttribute('src', src + img +'.gif'+ mode +'/w/'+size[i] + '/h/'+ size[i] + '/q/' + quality[j] +'#'+randNum); imgBox.appendChild(ctext); imgBox.appendChild(cimg); box.appendChild(imgBox); &#125;&#125; 经过以上测试：尺寸和清晰度都有可能影响图片识别，但是都不是最影响识别的原因。 原因先看看下图，信息过于密集，为了美观在一般的活动设计中二维码都不会很大，而这才是最影响二维码识别的原因。 解决方法 获取图片的原链接 把原链接转换成短链接 短链转换工具 最后把短链生成二维码 这样就能得到一张识别度高的二维码图片。 建议 考虑到目前还有不少小屏手机，建议二维码的实际显示尺寸不少于40*40px 如果二维码在大图上面，压缩之后可以尝试把二维码提取出来，然后再把未压缩的二维码与压缩后的背景合成一张。","categories":[],"tags":[{"name":"微信","slug":"微信","permalink":"http://hicitrus.com/blog/tags/微信/"},{"name":"二维码","slug":"二维码","permalink":"http://hicitrus.com/blog/tags/二维码/"}]},{"title":"关于责任","slug":"about-respons","date":"2016-05-06T16:00:00.000Z","updated":"2020-08-05T02:11:52.150Z","comments":true,"path":"about-respons/","link":"","permalink":"http://hicitrus.com/blog/about-respons/","excerpt":"","text":"感觉自己的优点挺多的，比如专注，耐心，友善……以前一直对自己感觉良好，但是除了责任心。可能我自己也能感受到，遇到难事就想放弃，过后发现其实了就这样。包括对感情的态度，那么轻易的放弃了一段感情。 最近一年感觉自己在这方面成长很多，也许是工作上需要负责的事情比较多吧，遇到难点心态已经不同。现在会想着怎样去解决，而不是怎么去躲避，当然结果也是有很大不同。虽然工作很忙，但是挺感谢这份工作，真正让我学会担当，懂得责任。 但是又因为太忙，感觉有些方面鲜于经营。 1，做it的几乎每天都忙，在电脑前的时间轻轻松松超过10小时，首当其冲有愧于自己的眼睛，眼睛干涩，视力下降。以前经常去骑车锻炼的好身体好身材慢慢变得亚健康，感觉很对不起自己。 2，对不起现在的女票。现在每周只能周日陪她，还有时候紧急情况周日还陪我加班。很感谢她，也很有愧于她。 3，虽然收获很多，但是也失去很多。对于自己的忙感觉已经变得病态，快要没有自我。时间变得非常宝贵，很难去按照之前的计划去学习新的知识，去逐步成长。还有自己的旅行计划，也被迫一一搁浅。","categories":[],"tags":[{"name":"生活","slug":"生活","permalink":"http://hicitrus.com/blog/tags/生活/"},{"name":"感想","slug":"感想","permalink":"http://hicitrus.com/blog/tags/感想/"}]},{"title":"git 常用命令","slug":"git-base","date":"2016-05-06T16:00:00.000Z","updated":"2020-08-05T02:11:52.151Z","comments":true,"path":"git-base/","link":"","permalink":"http://hicitrus.com/blog/git-base/","excerpt":"","text":"git 常用命令放弃本地的修改，用远程覆盖本地git fetch --all git reset --hard origin/master git fetch 只是下载远程的库的内容，不做任何的合并git reset 把HEAD指向刚刚下载的最新的版本","categories":[],"tags":[{"name":"git","slug":"git","permalink":"http://hicitrus.com/blog/tags/git/"},{"name":"github","slug":"github","permalink":"http://hicitrus.com/blog/tags/github/"}]},{"title":"gulp的基本使用","slug":"gulp-base","date":"2016-05-06T16:00:00.000Z","updated":"2020-08-05T02:11:52.151Z","comments":true,"path":"gulp-base/","link":"","permalink":"http://hicitrus.com/blog/gulp-base/","excerpt":"","text":"Gulp.js 是一个自动化构建工具，开发者可以使用它在项目开发过程中自动执行常见任务。Gulp.js 是基于 Node.js 构建的，利用 Node.js 流的威力，你可以快速构建项目并减少频繁的 IO 操作。Gulp.js 源文件和你用来定义任务的 Gulp 文件都是通过 JavaScript（或者 CoffeeScript ）源码来实现的。 1.全局安装 gulpnpm install --global gulp 2.作为项目的开发依赖（devDependencies）安装npm install --save-dev gulp 3.安装依赖组件npm snstall xx 4.在项目根目录下创建一个名为 gulpfile.js 的文件,引入依赖组件：// 引入 gulp及组件 var gulp=require(&apos;gulp&apos;), //gulp基础库 cleanCSS = require(&apos;gulp-clean-css&apos;), //css压缩 concat=require(&apos;gulp-concat&apos;), //合并文件 uglify=require(&apos;gulp-uglify&apos;), //js压缩 rename=require(&apos;gulp-rename&apos;), //文件重命名 jshint=require(&apos;gulp-jshint&apos;), //js检查 imagemin = require(&apos;gulp-imagemin&apos;), del = require(&apos;del&apos;), //清除文件 cache = require(&apos;gulp-cache&apos;), //图片缓存，只有图片替换了才压缩 notify=require(&apos;gulp-notify&apos;); //提示 //css gulp.task(&apos;minifycss&apos;,function(){ return gulp.src(&apos;etui/css/*.css&apos;) //设置css .pipe(concat(&apos;etui.css&apos;)) //合并css文件到&quot;etui&quot; .pipe(gulp.dest(&apos;dist/styles&apos;)) //设置输出路径 .pipe(rename({suffix:&apos;.min&apos;})) //修改文件名 //.pipe(cleanCSS()) //压缩文件 //.pipe(gulp.dest(&apos;dist/styles&apos;)) //输出文件目录 .pipe(notify({message:&apos;css task ok&apos;})); //提示成功 }); // Images gulp.task(&apos;minifyimg&apos;, function() { return gulp.src(&apos;Images/double/**/*&apos;) .pipe(cache(imagemin({ optimizationLevel: 3, progressive: true, interlaced: true }))) .pipe(gulp.dest(&apos;dist/images&apos;)) .pipe(notify({ message: &apos;Images task complete&apos; })); }); // Scripts gulp.task(&apos;minifyjs&apos;, function() { return gulp.src(&apos;Js/**/**/*.js&apos;) //.pipe(concat(&apos;main.js&apos;)) //合并所有js到main.js //.pipe(gulp.dest(&apos;dist/scripts&apos;)) //输出main.js到文件夹 .pipe(rename({suffix: &apos;.min&apos;})) //rename压缩后的文件名 .pipe(uglify()) //压缩 .pipe(gulp.dest(&apos;dist/scripts&apos;)); //输出 }); gulp.task(&apos;default&apos;, [&apos;minifycss&apos;, &apos;minifyimg&apos;,&apos;minifyjs&apos;]); 运行gulp 或者 gulp &lt;taskname&gt;","categories":[],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"http://hicitrus.com/blog/tags/nodejs/"},{"name":"gulp","slug":"gulp","permalink":"http://hicitrus.com/blog/tags/gulp/"}]},{"title":"linux常用命令","slug":"linux-base","date":"2016-05-06T16:00:00.000Z","updated":"2020-08-05T02:11:52.151Z","comments":true,"path":"linux-base/","link":"","permalink":"http://hicitrus.com/blog/linux-base/","excerpt":"","text":"寻找文件和目录 findfind pathname -options [-print -exec -ok ...] find / -name mydir 创建软链接/快捷方式ln -s 源文件 目标文件 当前目录是/local，而我经常要访问/usr/local/linux/work那么我就可以使用在local下建立一个文件linkwork，然后ln -s /usr/local/linux/work /local/linkwork","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://hicitrus.com/blog/tags/linux/"},{"name":"系统","slug":"系统","permalink":"http://hicitrus.com/blog/tags/系统/"}]},{"title":"nodejs基本安装和配置","slug":"nodejs-base","date":"2016-05-06T16:00:00.000Z","updated":"2020-08-05T02:11:52.152Z","comments":true,"path":"nodejs-base/","link":"","permalink":"http://hicitrus.com/blog/nodejs-base/","excerpt":"","text":"首先安装 下载安装包 https://nodejs.org/en/ 查看版本 进入cmd 运行 node -v 运行 npm -v 能正常显示出版本信息就说明已经安装成功 查看路径 npm root -g 或者 npm config get 使用npm安装模块$ npm install -g gulp 切换到淘宝镜像npm install cnpm -g --registry=https://registry.npm.taobao.org cnpm跟npm用法完全一致，只是在执行命令时将npm改为cnpm 其他相关命令删除window下目录过长的文件夹rm -rf 目录","categories":[],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"http://hicitrus.com/blog/tags/nodejs/"}]},{"title":"学习方法","slug":"learn-method","date":"2016-05-06T16:00:00.000Z","updated":"2020-08-05T02:11:52.151Z","comments":true,"path":"learn-method/","link":"","permalink":"http://hicitrus.com/blog/learn-method/","excerpt":"","text":"学习方法：是什么 官方说明 自己的理解 能做什么 功能清单 为什么要这样 类似功能的方法列表 对比xx有何优缺点 怎么去做 实现方法 目标 怎样才算学会 学习成本估算","categories":[],"tags":[{"name":"感想","slug":"感想","permalink":"http://hicitrus.com/blog/tags/感想/"},{"name":"学习","slug":"学习","permalink":"http://hicitrus.com/blog/tags/学习/"}]},{"title":"关于我","slug":"about","date":"2015-12-31T16:00:00.000Z","updated":"2020-08-05T02:11:52.151Z","comments":true,"path":"about/","link":"","permalink":"http://hicitrus.com/blog/about/","excerpt":"","text":"92男，前端工程师。兴趣广泛，爱折腾，酷爱骑行。 本博客文章主要分享于技术笔记。","categories":[],"tags":[]}]}